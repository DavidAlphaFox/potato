---
- name: Info
  debug:
    msg: "Selected branch: {{ deployment_branch }}"

- name: checkout git repo
  become: yes
  become_user: potato
  git:
    dest: "{{ commons.application_path }}"
    version: '{{ deployment_branch }}'
    accept_hostkey: yes
    repo: 'https://github.com/cicakhq/potato.git'
    force: yes
    depth: 1

- name: Git Fetch head
  become: yes
  become_user: potato
  command: git fetch --all
  args:
    chdir:  "{{ commons.application_path }}"

- name: Git overwrite local changes
  become: yes
  become_user: potato
  command: git reset --hard origin/{{ deployment_branch }}
  args:
    chdir: "{{ commons.application_path }}"

- name: set file ownership
  become: yes
  file: path={{ commons.application_path }} owner=potato group=potato mode=775 state=directory recurse=yes

- name: set git not to check file ownership
  become: yes
  become_user: potato
  command: /usr/bin/git config core.fileMode false
  args:
    chdir: "{{ commons.application_path }}"

- name: set git submodules not to check file ownership
  become: yes
  become_user: potato
  command: bash -c "for i in `ls /potato/current/vendor`; do cd /potato/current/vendor/$i ; /usr/bin/git config core.fileMode false; done"
  args:
    chdir: "{{ commons.application_path }}"

- name: Install gulp global
  become: yes
#  become_user: potato
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/node/bin"
  shell: >
    cd "{{ commons.application_path }}/web-app"; /bin/bash -c 'PATH=$PATH:/bin/:/usr/local/node/bin npm install gulp -g'

- name: Install bower global
  become: yes
#  become_user: potato
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/node/bin"
  shell: >
    cd "{{ commons.application_path }}/web-app"; /bin/bash -c 'PATH=$PATH:/bin/:/usr/local/node/bin npm install bower -g'

- name: Install bower package
  become: yes
  become_user: potato
  shell: >
    cd {{ commons.application_path }}/web-app/; PATH=/usr/local/node/bin:$PATH bower install --config.interactive=false

- name: Install bower package
  become: yes
  become_user: potato
  shell: >
    cd {{ commons.application_path }}/web-app/; PATH=/usr/local/node/bin:$PATH npm install

- name: Install Leiningem
  become: yes
  get_url: >
    url="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein"
    dest='/usr/local/bin'
    mode=775

- name: Clean lein cache
  become: yes
  become_user: potato
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  command: lein clean
  args:
    chdir: "{{ commons.application_path }}/web-app"

- name: Generate lein assets
  become: yes
  become_user: potato
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  command: lein with-profile -dev cljsbuild once prod admin-prod
  args:
    chdir: "/potato/current/web-app"

- name: Get potato.js Details
  become: yes
  become_user: potato
  stat: path="{{ commons.application_path }}/web-app/resources/public/js/{{ item }}" get_checksum=yes get_md5=yes
  register: assets_md5
  with_items:
    - potato.js
    - admin.js

- name: Assets path exists
  become: yes
  become_user: potato
  file: path="{{ commons.application_path }}/public/assets/js/" state=directory mode=0775

- name: Compile assets
  become: yes
  become_user: potato
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/node/bin"
  command: gulp build --production
  args:
    chdir: "{{ commons.application_path }}/web-app"
    
- name: Copy assets
  become: yes
  become_user: potato
  command: cp "{{ commons.application_path }}/web-app/resources/public/js/{{ item.item }}" "{{ commons.application_path }}/public/assets/js/{{ item.item | regex_replace('\.js','')  }}-{{ item.stat.md5 }}.js"
  with_items: "{{ assets_md5.results }}"

- name: Update manifest
  become: yes
  become_user: potato
  lineinfile:
    dest: "/potato/current/src/template/manifest/js.manifest"
    line: "  \"{{ item.item  }}\": \"{{ item.item | regex_replace('\\.js','') }}-{{ item.stat.md5 }}.js\", "
    insertafter: '{'
    regexp: "{{ item.item | regex_replace('\\.js','') }}"
    state: present
  with_items: "{{ assets_md5.results }}"
