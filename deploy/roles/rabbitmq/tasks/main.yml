---
- name: Get Rabbit MQ version
  shell: "rabbitmqctl status |grep RabbitMQ | grep -o '[0-9]\\.[0-9]\\.[0-9]' || echo NOPE"
  register: rabbitmq_result
  ignore_errors: yes

- name: Download RabbitMQ
  get_url: >
    url=https://www.rabbitmq.com/releases/rabbitmq-server/v{{rabbitmq_version}}/rabbitmq-server-{{rabbitmq_version}}-1.noarch.rpm
    dest=/tmp/rabbitmq-server-{{rabbitmq_version}}-1.noarch.rpm
    force=no
    sha256sum={{ rabbitmq_sha256sum }}
  when: rabbitmq_result.stdout != '{{ rabbitmq_version }}'

- name: Install RabbitMQ Server
  become: yes
  yum: name=/tmp/rabbitmq-server-{{rabbitmq_version}}-1.noarch.rpm state=present
  when: rabbitmq_result.stdout != '{{ rabbitmq_version }}'

- name: Remove previous rabbitmq-c installation tentative
  become: yes
  file: path='/tmp/rabbitmq-c' state=absent force=yes

- name: Get rabbitmq-c version
  shell: >
    egrep '^#define (AMQP_VERSION_MAJOR|AMQP_VERSION_MINOR|AMQP_VERSION_PATCH)' /usr/local/include/amqp.h | awk 'ORS="." {print $3}' | grep -o '[0-9]\.[0-9]\.[0-9]' || echo NOPE
  register: rabbitmq_c_result

- name: Checkout rabbitmq-c git repo
  become: no
  git:
    dest: '/tmp/rabbitmq-c'
    version: 'v{{ rabbitmq_c_version }}'
    accept_hostkey: yes
    repo: 'https://github.com/alanxz/rabbitmq-c.git'
    force: yes
    depth: 1
  when: rabbitmq_c_result.stdout != '{{ rabbitmq_c_version }}'
  notify: 'Delete cache'

- name: Copy rabbitmq-c installation script
  copy: src=rabbitmq-c-install.sh dest=/tmp/rabbitmq-c/rabbitmq-c-install.sh  mode=755
  when: rabbitmq_c_result.stdout != '{{ rabbitmq_c_version }}'
  notify: 'Delete cache'

- name: Install rabbitmq-c
  become: yes
  command: ./rabbitmq-c-install.sh
  args:
    chdir: '/tmp/rabbitmq-c'
  when: rabbitmq_c_result.stdout != '{{ rabbitmq_c_version }}'
  notify: 'Delete cache'

- name: Check if libffi already installed
  shell: "bash -c 'if [ -d /usr/local/lib/libffi-{{ libffi_version }} ]; then echo FOUND; else echo NOT_FOUND; fi'"
  register: libffi_result

- name: Remove previous libffi installation tentative
  become: yes
  file: path='/tmp/libffi' state=absent force=yes

- name: Checkout libffi git repo
  become: no
  git:
    dest: '/tmp/libffi'
    version: 'v{{ libffi_version }}'
    accept_hostkey: yes
    repo: 'https://github.com/atgreen/libffi.git'
    force: yes
    depth: 1
  when: libffi_result.stdout == 'NOT_FOUND'
  notify: 'Delete cache'

- name: Copy libffi installation script
  copy: src=libffi-install.sh dest=/tmp/libffi/libffi-install.sh  mode=755
  when: libffi_result.stdout == 'NOT_FOUND'
  notify: 'Delete cache'

- name: Install libffi
  become: yes
  command: ./libffi-install.sh
  args:
    chdir: '/tmp/libffi'
  when: libffi_result.stdout == 'NOT_FOUND'
  notify: 'Delete cache'

- name: Link libffi header files
  become: yes
  file: src=/usr/local/lib/libffi-{{ libffi_version }}/include/{{ item }} dest=/usr/local/include/{{ item }} state=link
  with_items:
    - ffi.h
    - ffitarget.h
  when: libffi_result.stdout == 'NOT_FOUND'
  notify: 'Delete cache'

- name: Let ldconfig know about additional libraries
  become: yes
  lineinfile: dest=/etc/ld.so.conf.d/rabbitmq.conf create=yes state=present line='/usr/local/lib64/'

- name: Refresh ldconfig
  become: yes
  command: ldconfig

- name: Start RabbitMQ on boot
  become: yes
  service: name=rabbitmq-server state=started enabled=yes

- name: Enable rabbitmq_management
  become: yes
  command: ./rabbitmq-plugins enable rabbitmq_management
  args:
    chdir: /usr/lib/rabbitmq/bin